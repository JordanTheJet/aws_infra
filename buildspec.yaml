# resource
# https://www.padok.fr/en/blog/codepipeline-eks-helm

version: 0.2

env:
  variables:
    REGION: "us-west-2"
    CLUSTER_NAME: "jtianTester"
    PROJECT_NAME: "jtianTester"
  #parameter-store:
     # key: "value"
     # key: "value"
  #secrets-manager:
     # key: secret-id:json-key:version-stage:version-id
     # key: secret-id:json-key:version-stage:version-id
  #exported-variables:
     # - variable
     # - variable
  #git-credential-helper: yes

phases:
  install: # Install Chocolatey, AWS CLI, Terraform, Kubectl
    commands:
      # Chocolatey 
      - "Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))"
      # AWS CLI, Terraform, Kubectl
      - choco install -yv awscli terraform kubernetes-cli
  #pre_build:
  build:
    commands:
      
      # Remote backend
      - push-location; set-location remote-backend
      #! TODO - confirm usage
      - .\backend_setup.ps1 $PROJECT_NAME $REGION

      - terraform init -input=false
      - terraform plan -out=tfplan -input=false
      - terraform apply -input=false tfplan
      - pop-location
      
      # EKS
      - push-location; set-location eks\terraform
      #! TODO - confirm usage
      - .\terrafrom_setup.ps1 $PROJECT_NAME $REGION

      - terraform init -input=false
      - terraform plan -out=tfplan -input=false
      - terraform apply -input=false tfplan
      ## point kubectl to eks
      - aws eks --region $REGION update-kubeconfig --name $CLUSTER_NAME
      ## config EKS permissions
      - terraform output config_map_aws_auth > config_map_aws_auth.yaml
      #! TODO shove in user mapping
      - 
      ## join node and add permissions
      - kubectl apply -f config_map_aws_auth.yaml
      - pop-location
      
      # app
      - push-location; set-location app
      #! TODO - confirm usage
      - .\app_setup.ps1 $PROJECT_NAME $REGION

      - terraform init -input=false
      - terraform plan -out=tfplan -input=false
      - terraform apply -input=false tfplan
  post_build:
    commands: # write the site URL to stdout
      - write-host "[INFO] site URL:`n`n$(terraform output hostname)`n"
      - pop-location
#reports:
  #report-name-or-arn:
    #files:
      # - location
      # - location
    #base-directory: location
    #discard-paths: yes
    #file-format: JunitXml | CucumberJson
#artifacts:
  #files:
    # - location
    # - location
  #name: $(date +%Y-%m-%d)
  #discard-paths: yes
  #base-directory: location
#cache:
  #paths:
    # - paths